{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dominik\\\\Desktop\\\\sem4\\\\Spp\\\\qr_nwe\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Html5QrcodeScanner } from \"html5-qrcode\";\nimport { useEffect, useState, useRef } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [scanResult, setScanResult] = useState(null);\n  const readerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n\n  // useEffect(() => {\n  //   const readerElement = readerRef.current;\n  //   if (readerElement) {\n  //     setDimensions({\n  //       width: readerElement.offsetWidth,\n  //       height: readerElement.offsetHeight\n  //     });\n  //   }\n  // }, []);\n\n  console.log(\"dimensions\", dimensions);\n  useEffect(() => {\n    setDimensions({\n      width: readerRef.current.offsetWidth,\n      height: readerRef.current.offsetHeight\n    });\n    console.log(\"dimensions KRUAWAWd\", dimensions);\n    const height_Const = dimensions.height;\n    const width_Const = dimensions.width;\n    console.log(\"dimensions\", dimensions);\n    console.log(\"dimensions\", dimensions.height, dimensions.width);\n    const scanner = new Html5QrcodeScanner('reader', {\n      qrbox: {\n        width: width_Const,\n        height: height_Const\n      },\n      fps: 10\n    });\n    scanner.render(onScanSuccess, onScanError);\n    function onScanSuccess(qrCodeMessage) {\n      // handle on success condition with the decoded message\n      scanner.clear(); // stop scanning\n      setScanResult(qrCodeMessage);\n      console.log(qrCodeMessage);\n    }\n    function onScanError(errorMessage) {\n      // handle on error condition with the error message\n      console.warn(errorMessage);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QR Code Scanning in React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: readerRef,\n        children: scanResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"reader\",\n          children: [\"Success: \", scanResult]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"reader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"29/2A9vvFqHLdsqX6hOe/gAHNXE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Html5QrcodeScanner","useEffect","useState","useRef","jsxDEV","_jsxDEV","App","_s","scanResult","setScanResult","readerRef","dimensions","setDimensions","width","height","console","log","current","offsetWidth","offsetHeight","height_Const","width_Const","scanner","qrbox","fps","render","onScanSuccess","onScanError","qrCodeMessage","clear","errorMessage","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","id","_c","$RefreshReg$"],"sources":["C:/Users/Dominik/Desktop/sem4/Spp/qr_nwe/my-app/src/App.js"],"sourcesContent":["import { Html5QrcodeScanner } from \"html5-qrcode\";\nimport { useEffect, useState, useRef } from \"react\";\nimport './App.css';\nfunction App() {\n\n  const [scanResult, setScanResult] = useState(null);\n  const readerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n\n  // useEffect(() => {\n  //   const readerElement = readerRef.current;\n  //   if (readerElement) {\n  //     setDimensions({\n  //       width: readerElement.offsetWidth,\n  //       height: readerElement.offsetHeight\n  //     });\n  //   }\n  // }, []);\n\n  console.log(\"dimensions\", dimensions);  \n\n  useEffect(() => { \n    setDimensions({\n      width: readerRef.current.offsetWidth,\n      height: readerRef.current.offsetHeight\n    });\n    console.log(\"dimensions KRUAWAWd\", dimensions);  \n\n\n    \n    const height_Const = dimensions.height;\n    const width_Const = dimensions.width; \n    console.log(\"dimensions\", dimensions);  \n\n    console.log(\"dimensions\", dimensions.height, dimensions.width );\n    const scanner  = new Html5QrcodeScanner('reader', {\n      qrbox: { width: width_Const, height: height_Const },\n      fps: 10,  \n  });\n  \n  scanner.render(onScanSuccess, onScanError);\n  \n  function onScanSuccess(qrCodeMessage) {\n      // handle on success condition with the decoded message\n      scanner.clear(); // stop scanning\n      setScanResult(qrCodeMessage);\n      console.log(qrCodeMessage);\n  }\n  \n  function onScanError(errorMessage) {  \n      // handle on error condition with the error message\n      console.warn(errorMessage); \n  }\n}, []);\n\n\n  \n\n  return (\n    <div className=\"App\">\n      <h1>QR Code Scanning in React</h1>\n      <div className=\"container\">\n        <div ref={readerRef}>\n          {\n            scanResult \n            ? <div id=\"reader\">Success: {scanResult}</div>\n            : <div id=\"reader\"></div>\n        \n          }\n        </div>\n        \n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}