{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dominik\\\\Desktop\\\\sem4\\\\Spp\\\\qr_nwe\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Html5QrcodeScanner } from \"html5-qrcode\";\nimport { useEffect, useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [scanResult, setScanResult] = useState(null);\n  useEffect(() => {\n    const scanner = new Html5QrcodeScanner('reader', {\n      qrbox: {\n        width: 50,\n        height: 50\n      },\n      fps: 5,\n      showTorchButtonIfSupported: true\n    });\n    scanner.render(onScanSuccess, onScanError);\n    function onScanSuccess(qrCodeMessage) {\n      // handle on success condition with the decoded message\n      scanner.clear(); // stop scanning\n      setScanResult(qrCodeMessage);\n      console.log(qrCodeMessage);\n    }\n    function onScanError(errorMessage) {\n      // handle on error condition with the error message\n      console.warn(errorMessage);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QR Code Scanning in React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      children: scanResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" success: \", scanResult, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"reader\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"x+VXfWdQxQjC/BfErFfSl9cNaVA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Html5QrcodeScanner","useEffect","useState","jsxDEV","_jsxDEV","App","_s","scanResult","setScanResult","scanner","qrbox","width","height","fps","showTorchButtonIfSupported","render","onScanSuccess","onScanError","qrCodeMessage","clear","console","log","errorMessage","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/Dominik/Desktop/sem4/Spp/qr_nwe/my-app/src/App.js"],"sourcesContent":["import { Html5QrcodeScanner } from \"html5-qrcode\";\nimport { useEffect, useState } from \"react\";\nimport './App.css';\n\nfunction App() {\n\n  const [scanResult, setScanResult] = useState(null);\n\n  useEffect(() => { \n    const scanner  = new Html5QrcodeScanner('reader', {\n      qrbox: { width: 50, height: 50 },\n      fps: 5,  \n      showTorchButtonIfSupported : true,\n  });\n  \n  scanner.render(onScanSuccess, onScanError);\n  \n  function onScanSuccess(qrCodeMessage) {\n      // handle on success condition with the decoded message\n      scanner.clear(); // stop scanning\n      setScanResult(qrCodeMessage);\n      console.log(qrCodeMessage);\n  }\n  \n  function onScanError(errorMessage) {  \n      // handle on error condition with the error message\n      console.warn(errorMessage); \n  }\n}, []);\n\n\n  \n\n  return (\n    <div className=\"App\">\n      <h1>QR Code Scanning in React</h1>\n      <div id = \"main\">\n        {\n          scanResult\n          ? <div> success: {scanResult} </div>\n          : <div id=\"reader\"> </div>\n        }\n        {/* <div id=\"reader\"> </div> */}\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,kBAAkB,QAAQ,cAAc;AACjD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMQ,OAAO,GAAI,IAAIT,kBAAkB,CAAC,QAAQ,EAAE;MAChDU,KAAK,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAC;MAChCC,GAAG,EAAE,CAAC;MACNC,0BAA0B,EAAG;IACjC,CAAC,CAAC;IAEFL,OAAO,CAACM,MAAM,CAACC,aAAa,EAAEC,WAAW,CAAC;IAE1C,SAASD,aAAaA,CAACE,aAAa,EAAE;MAClC;MACAT,OAAO,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC;MACjBX,aAAa,CAACU,aAAa,CAAC;MAC5BE,OAAO,CAACC,GAAG,CAACH,aAAa,CAAC;IAC9B;IAEA,SAASD,WAAWA,CAACK,YAAY,EAAE;MAC/B;MACAF,OAAO,CAACG,IAAI,CAACD,YAAY,CAAC;IAC9B;EACF,CAAC,EAAE,EAAE,CAAC;EAKJ,oBACElB,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA;MAAAqB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCzB,OAAA;MAAK0B,EAAE,EAAG,MAAM;MAAAL,QAAA,EAEZlB,UAAU,gBACRH,OAAA;QAAAqB,QAAA,GAAK,YAAU,EAAClB,UAAU,EAAC,GAAC;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAClCzB,OAAA;QAAK0B,EAAE,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV;AAACvB,EAAA,CA3CQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}