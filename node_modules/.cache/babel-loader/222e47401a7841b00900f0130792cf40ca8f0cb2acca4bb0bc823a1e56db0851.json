{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dominik\\\\Desktop\\\\sem4\\\\Spp\\\\qr_nwe\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Html5QrcodeScanner } from \"html5-qrcode\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [scanResult, setScanResult] = useState(null);\n  useEffect(() => {\n    const scanner = new Html5QrcodeScanner('reader', {\n      qrbox: {\n        width: 250,\n        height: 250\n      },\n      fps: 10\n    });\n    scanner.render(onScanSuccess, onScanError);\n    function onScanSuccess(qrCodeMessage) {\n      // handle on success condition with the decoded message\n      scanner.clear(); // stop scanning\n      setScanResult(qrCodeMessage);\n      console.log(qrCodeMessage);\n    }\n    function onScanError(errorMessage) {\n      // handle on error condition with the error message\n      console.warn(errorMessage);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: scanResult ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Scan Result: \", scanResult]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scan a QR code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 59\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"x+VXfWdQxQjC/BfErFfSl9cNaVA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Html5QrcodeScanner","useEffect","useState","jsxDEV","_jsxDEV","App","_s","scanResult","setScanResult","scanner","qrbox","width","height","fps","render","onScanSuccess","onScanError","qrCodeMessage","clear","console","log","errorMessage","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dominik/Desktop/sem4/Spp/qr_nwe/my-app/src/App.js"],"sourcesContent":["import { Html5QrcodeScanner } from \"html5-qrcode\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n\n  const [scanResult, setScanResult] = useState(null);\n\n  useEffect(() => { \n    const scanner  = new Html5QrcodeScanner('reader', {\n      qrbox: { width: 250, height: 250 },\n      fps: 10,  \n  });\n  \n  scanner.render(onScanSuccess, onScanError);\n  \n  function onScanSuccess(qrCodeMessage) {\n      // handle on success condition with the decoded message\n      scanner.clear(); // stop scanning\n      setScanResult(qrCodeMessage);\n      console.log(qrCodeMessage);\n  }\n  \n  function onScanError(errorMessage) {  \n      // handle on error condition with the error message\n      console.warn(errorMessage); \n  }\n}, []);\n\n\n  \n\n  return (\n    <div className=\"App\">\n      {\n        scanResult ? <h1>Scan Result: {scanResult}</h1> : <h1>Scan a QR code</h1> \n      }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,kBAAkB,QAAQ,cAAc;AACjD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMQ,OAAO,GAAI,IAAIT,kBAAkB,CAAC,QAAQ,EAAE;MAChDU,KAAK,EAAE;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI,CAAC;MAClCC,GAAG,EAAE;IACT,CAAC,CAAC;IAEFJ,OAAO,CAACK,MAAM,CAACC,aAAa,EAAEC,WAAW,CAAC;IAE1C,SAASD,aAAaA,CAACE,aAAa,EAAE;MAClC;MACAR,OAAO,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC;MACjBV,aAAa,CAACS,aAAa,CAAC;MAC5BE,OAAO,CAACC,GAAG,CAACH,aAAa,CAAC;IAC9B;IAEA,SAASD,WAAWA,CAACK,YAAY,EAAE;MAC/B;MACAF,OAAO,CAACG,IAAI,CAACD,YAAY,CAAC;IAC9B;EACF,CAAC,EAAE,EAAE,CAAC;EAKJ,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,EAEhBjB,UAAU,gBAAGH,OAAA;MAAAoB,QAAA,GAAI,eAAa,EAACjB,UAAU;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAAGxB,OAAA;MAAAoB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExE,CAAC;AAEV;AAACtB,EAAA,CAnCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}