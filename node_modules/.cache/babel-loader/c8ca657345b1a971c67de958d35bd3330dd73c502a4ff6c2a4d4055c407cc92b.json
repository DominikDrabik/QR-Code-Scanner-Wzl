{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dominik\\\\Desktop\\\\sem4\\\\Spp\\\\qr_nwe\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Html5QrcodeScanner } from \"html5-qrcode\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [scanResult, setScanResult] = useState(null);\n  const scanner = new Html5QrcodeScanner('reader', {\n    qrbox: {\n      width: 250,\n      height: 250\n    },\n    fps: 5\n  });\n  scanner.render(onScanSuccess, onScanError);\n  function onScanSuccess(qrCodeMessage) {\n    // handle on success condition with the decoded message\n    scanner.clear(); // stop scanning\n    setScanResult(qrCodeMessage);\n    console.log(qrCodeMessage);\n  }\n  function onScanError(errorMessage) {\n    // handle on error condition with the error message\n    console.warn(errorMessage);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QR Code Scanning in React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"reader\",\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JIdQ6soLu4IboSpRyWfGc/3YJtY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Html5QrcodeScanner","useState","jsxDEV","_jsxDEV","App","_s","scanResult","setScanResult","scanner","qrbox","width","height","fps","render","onScanSuccess","onScanError","qrCodeMessage","clear","console","log","errorMessage","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/Dominik/Desktop/sem4/Spp/qr_nwe/my-app/src/App.js"],"sourcesContent":["import { Html5QrcodeScanner } from \"html5-qrcode\";\nimport { useState } from \"react\";\n\nfunction App() {\n\n  const [scanResult, setScanResult] = useState(null);\n\n  const scanner  = new Html5QrcodeScanner('reader', {\n    qrbox: { width: 250, height: 250 },\n    fps: 5,  \n});\n\nscanner.render(onScanSuccess, onScanError);\n\nfunction onScanSuccess(qrCodeMessage) {\n    // handle on success condition with the decoded message\n    scanner.clear(); // stop scanning\n    setScanResult(qrCodeMessage);\n    console.log(qrCodeMessage);\n}\n\nfunction onScanError(errorMessage) {  \n    // handle on error condition with the error message\n    console.warn(errorMessage); \n}\n\n  return (\n    <div className=\"App\">\n      <h1>QR Code Scanning in React</h1>\n      <div id=\"reader\"> </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,kBAAkB,QAAQ,cAAc;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMO,OAAO,GAAI,IAAIR,kBAAkB,CAAC,QAAQ,EAAE;IAChDS,KAAK,EAAE;MAAEC,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE;IAAI,CAAC;IAClCC,GAAG,EAAE;EACT,CAAC,CAAC;EAEFJ,OAAO,CAACK,MAAM,CAACC,aAAa,EAAEC,WAAW,CAAC;EAE1C,SAASD,aAAaA,CAACE,aAAa,EAAE;IAClC;IACAR,OAAO,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC;IACjBV,aAAa,CAACS,aAAa,CAAC;IAC5BE,OAAO,CAACC,GAAG,CAACH,aAAa,CAAC;EAC9B;EAEA,SAASD,WAAWA,CAACK,YAAY,EAAE;IAC/B;IACAF,OAAO,CAACG,IAAI,CAACD,YAAY,CAAC;EAC9B;EAEE,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA;MAAAoB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCxB,OAAA;MAAKyB,EAAE,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV;AAACtB,EAAA,CA7BQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}